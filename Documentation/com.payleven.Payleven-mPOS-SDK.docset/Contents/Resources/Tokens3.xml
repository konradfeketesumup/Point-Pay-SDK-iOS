<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
<<<<<<< HEAD
	<File path="Classes/PLVPaymentRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/PLVPaymentRequest</TokenIdentifier>
			<Abstract type="html">PLVPaymentRequest is payment request instance that requires the identifier,
amount, coordinate and currency.</Abstract>
			<DeclaredIn>PLVPaymentRequest.h</DeclaredIn>
=======
	<File path="Classes/PLVPaymentProgressViewController.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/PLVPaymentProgressViewController</TokenIdentifier>
			<Abstract type="html">PLVPaymentProgressViewController enables you to implement optional animations to your user interface in your app. You can also customize the Viewâ€™s appearance and provide a primary and/or secondary colour to align with your branding.</Abstract>
			<DeclaredIn>PLVPaymentProgressViewController.h</DeclaredIn>
>>>>>>> test
            
			
			<NodeRef refid="3"/>
		</Token>
		
		
		<Token>
<<<<<<< HEAD
			<TokenIdentifier>//apple_ref/occ/instm/PLVPaymentRequest/setIdentifier:</TokenIdentifier>
			<Abstract type="html">Payment identifier.</Abstract>
			<DeclaredIn>PLVPaymentRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, copy) NSString *identifier</Declaration>
			
			
			<Anchor>//api/name/identifier</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PLVPaymentRequest/identifier</TokenIdentifier>
			<Abstract type="html">Payment identifier.</Abstract>
			<DeclaredIn>PLVPaymentRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, copy) NSString *identifier</Declaration>
			
			
			<Anchor>//api/name/identifier</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PLVPaymentRequest/identifier</TokenIdentifier>
			<Abstract type="html">Payment identifier.</Abstract>
			<DeclaredIn>PLVPaymentRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, copy) NSString *identifier</Declaration>
			
			
			<Anchor>//api/name/identifier</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PLVPaymentRequest/setAmount:</TokenIdentifier>
			<Abstract type="html">Payment amount. The value can be fractional, maximum two fraction digits are allowed.
When creating NSDecimalNumber from NSString, don&apos;t forget to take the current locale and the decimal separator into account.</Abstract>
			<DeclaredIn>PLVPaymentRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, copy) NSDecimalNumber *amount</Declaration>
			
			
			<Anchor>//api/name/amount</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PLVPaymentRequest/amount</TokenIdentifier>
			<Abstract type="html">Payment amount. The value can be fractional, maximum two fraction digits are allowed.
When creating NSDecimalNumber from NSString, don&apos;t forget to take the current locale and the decimal separator into account.</Abstract>
			<DeclaredIn>PLVPaymentRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, copy) NSDecimalNumber *amount</Declaration>
			
			
			<Anchor>//api/name/amount</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PLVPaymentRequest/amount</TokenIdentifier>
			<Abstract type="html">Payment amount. The value can be fractional, maximum two fraction digits are allowed.
When creating NSDecimalNumber from NSString, don&apos;t forget to take the current locale and the decimal separator into account.</Abstract>
			<DeclaredIn>PLVPaymentRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, copy) NSDecimalNumber *amount</Declaration>
			
			
			<Anchor>//api/name/amount</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PLVPaymentRequest/setCurrency:</TokenIdentifier>
			<Abstract type="html">Three-letter ISO 4217 currency code. Supported currencies: EUR, GBP, PLZ.</Abstract>
			<DeclaredIn>PLVPaymentRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, copy) NSString *currency</Declaration>
			
			
			<Anchor>//api/name/currency</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PLVPaymentRequest/currency</TokenIdentifier>
			<Abstract type="html">Three-letter ISO 4217 currency code. Supported currencies: EUR, GBP, PLZ.</Abstract>
			<DeclaredIn>PLVPaymentRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, copy) NSString *currency</Declaration>
			
			
			<Anchor>//api/name/currency</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PLVPaymentRequest/currency</TokenIdentifier>
			<Abstract type="html">Three-letter ISO 4217 currency code. Supported currencies: EUR, GBP, PLZ.</Abstract>
			<DeclaredIn>PLVPaymentRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, copy) NSString *currency</Declaration>
			
			
			<Anchor>//api/name/currency</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PLVPaymentRequest/setCoordinate:</TokenIdentifier>
			<Abstract type="html">Current device coordinate.</Abstract>
			<DeclaredIn>PLVPaymentRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, assign) CLLocationCoordinate2D coordinate</Declaration>
			
			
			<Anchor>//api/name/coordinate</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PLVPaymentRequest/coordinate</TokenIdentifier>
			<Abstract type="html">Current device coordinate.</Abstract>
			<DeclaredIn>PLVPaymentRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, assign) CLLocationCoordinate2D coordinate</Declaration>
			
			
			<Anchor>//api/name/coordinate</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PLVPaymentRequest/coordinate</TokenIdentifier>
			<Abstract type="html">Current device coordinate.</Abstract>
			<DeclaredIn>PLVPaymentRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, assign) CLLocationCoordinate2D coordinate</Declaration>
			
			
			<Anchor>//api/name/coordinate</Anchor>
=======
			<TokenIdentifier>//apple_ref/occ/instm/PLVPaymentProgressViewController/initWithPrimaryColor:secondaryColor:</TokenIdentifier>
			<Abstract type="html">init object of PLVPaymentProgressViewController using custom colors</Abstract>
			<DeclaredIn>PLVPaymentProgressViewController.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithPrimaryColor:(UIColor *)primaryColor secondaryColor:(UIColor *)secondaryColor</Declaration>
			<Parameters>
				<Parameter>
					<Name>primaryColor</Name>
					<Abstract type="html">color of the payment device used in animations.</Abstract>
				</Parameter><Parameter>
					<Name>secondaryColor</Name>
					<Abstract type="html">color of cards and PIN indicators used in animations.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithPrimaryColor:secondaryColor:</Anchor>
>>>>>>> test
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
<<<<<<< HEAD
			<TokenIdentifier>//apple_ref/occ/instm/PLVPaymentRequest/initWithIdentifier:amount:currency:coordinate:</TokenIdentifier>
			<Abstract type="html">Initializes the receiver with the specified identifier, amount, currency, and coordinate.</Abstract>
			<DeclaredIn>PLVPaymentRequest.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithIdentifier:(NSString *)identifier amount:(NSDecimalNumber *)amount currency:(NSString *)currency coordinate:(CLLocationCoordinate2D)coordinate</Declaration>
			<Parameters>
				<Parameter>
					<Name>identifier</Name>
					<Abstract type="html">Payment identifier.</Abstract>
				</Parameter><Parameter>
					<Name>amount</Name>
					<Abstract type="html">Payment amount. The value can be fractional, maximum two fraction digits are allowed. When creating
                NSDecimalNumber from NSString, don&apos;t forget to take the current locale and the decimal separator
                into account.</Abstract>
				</Parameter><Parameter>
					<Name>currency</Name>
					<Abstract type="html">three-letter ISO 4217 currency code. Supported currencies: EUR, GBP, PLZ.</Abstract>
				</Parameter><Parameter>
					<Name>coordinate</Name>
					<Abstract type="html">Current device coordinate.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithIdentifier:amount:currency:coordinate:</Anchor>
=======
			<TokenIdentifier>//apple_ref/occ/instm/PLVPaymentProgressViewController/animateWithPaymentProgressState:</TokenIdentifier>
			<Abstract type="html">Call this method on PLVPaymentTaskDelegate&apos;s paymentTask:progressDidChange: and forward the received PLVPaymentProgressState</Abstract>
			<DeclaredIn>PLVPaymentProgressViewController.h</DeclaredIn>
			
			<Declaration>- (void)animateWithPaymentProgressState:(PLVPaymentProgressState)progressState</Declaration>
			<Parameters>
				<Parameter>
					<Name>progressState</Name>
					<Abstract type="html">PLVPaymentProgressState to animate current state.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/animateWithPaymentProgressState:</Anchor>
>>>>>>> test
            <NodeRef refid="3"/>
		</Token>
		
        
        
	</File>
</Tokens>